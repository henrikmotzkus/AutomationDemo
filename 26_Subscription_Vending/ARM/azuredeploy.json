{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "enrollmentAccount": {
      "type": "string",
      "defaultValue": "341847"
    },
    "billingAccount": {
      "type": "string",
      "defaultValue": "8608480"
    },
    "subscriptionAlias": {
      "type": "string"
    },
    "subscriptionDisplayName": {
      "type": "string"
    },
    "subscriptionWorkload": {
      "type": "string",
      "allowedValues": [
        "Production",
        "DevTest"
      ]
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]"
    },
    "restags": {
      "type": "object"
    },
    "budget": {
      "type": "int"
    },
    "ContactEmail": {
      "type": "array"
    },
    "targetMgId": {
      "type": "string"
    },
    "principalid": {
      "type": "string",
      "defaultValue": "123456789"
    },
    "vnetAddressPrefix": {
      "type": "string"
    },
    "subnet1Prefix": {
      "type": "string"
    },
    "subnet2Prefix": {
      "type": "string"
    },
    "hubvnet": {
      "type": "string",
      "defaultValue": "Hub"
    },
    "hubsubscriptionid": {
      "type": "string",
      "defaultValue": "0548f072-39c5-4986-864d-14d0395af3b7"
    },
    "hubresourcegroupname": {
      "type": "string",
      "defaultValue": "Network"
    },
    "deploymentnameprefix": {
      "type": "string",
      "defaultValue":"test"
    },
    "projectprefix": {
      "type": "string"
    },
    "routes": {
      "type": "array"
    }
  },
  "variables": {
    "resourcegroupname": "[concat('rg-',parameters('projectprefix'))]",
    "vnetname": "[concat('vnet-',parameters('projectprefix'))]"
  },
  "resources": [
    // This is the first deployment in the chain of deployments and creates the subscription
    // every subsequent deployment is dependend of the subscription id that is been created through 
    // this deployment
    // scope: Management group
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[concat(parameters('deploymentnameprefix'),'-','create-sub')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "Inner"
        },
        "mode": "Incremental",
        "parameters": {
          "billingAccount": {
            "value": "[parameters('billingAccount')]"
          },
          "enrollmentAccount": {
            "value": "[parameters('enrollmentAccount')]"
          },
          "subscriptionAlias": {
            "value": "[parameters('subscriptionAlias')]"
          },
          "subscriptionDisplayName": {
            "value": "[parameters('subscriptionDisplayName')]"
          },
          "subscriptionWorkload": {
            "value": "[parameters('subscriptionWorkload')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "enrollmentAccount": {
              "type": "string"
            },
            "billingAccount": {
              "type": "string"
            },
            "subscriptionAlias": {
              "type": "string"
            },
            "subscriptionDisplayName": {
              "type": "string"
            },
            "subscriptionWorkload": {
              "type": "string"
            }
          },
          "variables": {
          },
          "resources": [
            {
              "type": "Microsoft.Subscription/aliases",
              "apiVersion": "2020-09-01",
              "scope": "/",
              "name": "[parameters('subscriptionAlias')]",
              "properties": {
                "workload": "[parameters('subscriptionWorkload')]",
                "displayName": "[parameters('subscriptionDisplayName')]",
                "billingScope": "[tenantResourceId('Microsoft.Billing/billingAccounts/enrollmentAccounts', parameters('billingAccount'), parameters('enrollmentAccount'))]"
              }
            }
          ],
          "outputs": {
            "subscriptionId": {
              "type": "string",
              "value": "[reference(tenantResourceId('Microsoft.Subscription/aliases', parameters('subscriptionAlias'))).subscriptionId]"
            }
          }
        }
      }
    },
    // This is the second deployment and depend on the sub deployment
    // this deployment is the bracket of all other reource deployments
    // scope: Management group
    // dependend on: 
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[concat(parameters('deploymentnameprefix'),'-','nested')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "Inner"
        },
        "mode": "Incremental",
        "parameters": {
          "projectprefix": {
            "value": "[parameters('projectprefix')]"
          },
          "deploymentnameprefix": {
            "value": "[parameters('deploymentnameprefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "subscriptionId": {
            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', concat(parameters('deploymentnameprefix'),'-','create-sub'))).outputs.subscriptionId.value]"
          },
          "restags": {
            "value": "[parameters('restags')]"
          },
          "budget": {
            "value": "[parameters('budget')]"
          },
          "ContactEmail": {
            "value": "[parameters('ContactEmail')]"
          },
          "principalid": {
            "value": "[parameters('principalid')]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('vnetAddressPrefix')]"
          },
          "subnet1Prefix": {
            "value": "[parameters('subnet1Prefix')]"
          },
          "subnet2Prefix": {
            "value": "[parameters('subnet2Prefix')]"
          },
          "hubvnet": {
            "value": "[parameters('hubvnet')]"
          },
          "hubsubscriptionid": {
            "value": "[parameters('hubsubscriptionid')]"
          },
          "hubresourcegroupname": {
            "value": "[parameters('hubresourcegroupname')]"
          },
          "routes": {
            "value": "[parameters('routes')]"
          },
          "targetmgid": {
            "value": "[parameters('targetMgId')]"
          },
          "resourcegroupname": {
            "value": "[variables('resourcegroupname')]"
          },
          "vnetname": {
            "value": "[variables('vnetname')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "projectprefix": {
              "type": "string"
            },
            "deploymentnameprefix": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[deployment().location]"
            },
            "restags": {
              "type": "object"
            },
            "budget": {
              "type": "int"
            },
            "ContactEmail": {
              "type": "array"
            },
            "principalid": {
              "type": "string"
            },
            "vnetAddressPrefix": {
              "type": "string"
            },
            "subnet1Prefix": {
              "type": "string"
            },
            "subnet2Prefix": {
              "type": "string"
            },
            "hubvnet": {
              "type": "string"
            },
            "hubsubscriptionid": {
              "type": "string"
            },
            "hubresourcegroupname": {
              "type": "string"
            },
            "routes": {
              "type": "array"
            },
            "resourcegroupname": {
              "type": "string"
            },
            "vnetname": {
              "type": "string"
            },
            "targetmgid": {
              "type": "string"
            }
          },
          "resources": [
            // 0 ResourceGroup deployment
            // scope: subscription
            // dependen on: no one
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[concat(parameters('deploymentnameprefix'),'-','create-RG')]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "restags": {
                    "value": "[parameters('restags')]"
                  },
                  "projectprefix": {
                      "value": "[parameters('projectprefix')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "location": {
                      "type": "string",
                      "defaultValue": "[deployment().location]"
                    },
                    "restags": {
                      "type": "object"
                    },
                    "projectprefix":{
                      "type": "string"
                    }
                  },
                  "variables":{
                    "resourcegroupname": "[concat('rg-',parameters('projectprefix'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/resourceGroups",
                      "apiVersion": "2021-04-01",
                      "name": "[variables('resourcegroupname')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('restags')]"
                    }
                  ]
                }
              }
            },
            // 1 Move subscription to a management group
            // scope: /
            // dependend on: no one runs in parallel to 0
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[concat(parameters('deploymentnameprefix'),'-','move-sub')]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "Inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "targetMgId": {
                    "value": "[parameters('targetmgid')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "targetMgId": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "scope": "/",
                      "type": "Microsoft.Management/managementGroups/subscriptions",
                      "apiVersion": "2020-05-01",
                      "name": "[concat(parameters('targetMgId'), '/', parameters('subscriptionId'))]",
                      "properties": {}
                    }
                  ]
                }
              }
            },
            // 2 Create a VNET and two subnets
            // Create the route table to central hub
            // Creates a action group
            // Creates a storage account
            // scope: resource group
            // dependend on: 0
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[concat(parameters('deploymentnameprefix'),'-','create-Resources')]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentnameprefix'),'-','create-RG'))]"
              ],
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "projectprefix": {
                    "value": "[parameters('projectprefix')]"
                  },
                  "vnetAddressPrefix": {
                    "value": "[parameters('vnetAddressPrefix')]"
                  },
                  "subnet1Prefix": {
                    "value": "[parameters('subnet1Prefix')]"
                  },
                  "subnet2Prefix": {
                    "value": "[parameters('subnet2Prefix')]"
                  },
                  "location": {
                    "value": "[deployment().location]"
                  },
                  "hubvnet": {
                    "value": "[parameters('hubvnet')]"
                  },
                  "hubsubscriptionid": {
                    "value": "[parameters('hubsubscriptionid')]"
                  },
                  "hubresourcegroupname": {
                    "value": "[parameters('hubresourcegroupname')]"
                  },
                  "restags": {
                    "value": "[parameters('restags')]"
                  },
                  "routes": {
                    "value": "[parameters('routes')]"
                  },
                  "emailReceivers": {
                    "value": "[parameters('ContactEmail')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "projectprefix": {
                      "type": "string"
                    },
                    "vnetAddressPrefix": {
                      "type": "string"
                    },
                    "subnet1Prefix": {
                      "type": "string"
                    },
                    "subnet2Prefix": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "hubvnet": {
                      "type": "string"
                    },
                    "hubsubscriptionid": {
                      "type": "string"
                    },
                    "hubresourcegroupname": {
                      "type": "string"
                    },
                    "restags": {
                      "type": "object"
                    },
                    "routes": {
                      "type": "array"
                    },
                    "emailReceivers": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "subnetname1": {
                      "type": "string",
                      "defaultValue":"subnet1"
                    },
                     "subnetname2": {
                      "type": "string",
                      "defaultValue":"subnet2"
                    }
                  },
                  "variables": {
                    "vnetname": "[concat('vnet-',parameters('projectprefix'))]",
                    "routetablename": "[concat('routetable-',parameters('projectprefix'))]",
                    "actiongroupname": "[concat('actiongroup-',parameters('projectprefix'))]",
                    "actiongroupnameshort": "[parameters('projectprefix')]",
                    "storageAccountName": "[concat('sa',tolower(parameters('projectprefix')))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks",
                      "apiVersion": "2021-08-01",
                      "name": "[variables('vnetname')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('restags')]",
                      "properties": {
                        "addressSpace": {
                          "addressPrefixes": [
                            "[parameters('vnetAddressPrefix')]"
                          ]
                        },
                        "subnets": [
                          {
                            "name": "[parameters('subnetname1')]",
                            "properties": {
                              "addressPrefix": "[parameters('subnet1Prefix')]",
                              "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('routetablename'))]"
                              }
                            }
                          },
                          {
                            "name": "[parameters('subnetname2')]",
                            "properties": {
                              "addressPrefix": "[parameters('subnet2Prefix')]",
                              "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('routetablename'))]"
                              }
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/routeTables',variables('routetablename'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                      "apiVersion": "2020-05-01",
                      "name": "[format('{0}/{1}', variables('vnetName'), format('{0}-{1}', variables('vnetName'), parameters('hubvnet')))]",
                      "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": false,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false,
                        "remoteVirtualNetwork": {
                          "id": "[concat('/subscriptions/',parameters('hubsubscriptionid'),'/resourceGroups/',parameters('hubresourcegroupname'),'/providers/Microsoft.Network/virtualNetworks/', parameters('hubvnet'))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/routeTables",
                      "apiVersion": "2021-02-01",
                      "name": "[variables('routetablename')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "disableBgpRoutePropagation": "true",
                        "copy": [
                          {
                            "name": "routes",
                            "count": "[length(parameters('routes'))]",
                            "input": {
                              "name": "[parameters('routes')[copyIndex('routes')].name]",
                              "properties": {
                                "addressPrefix": "[parameters('routes')[copyIndex('routes')].addressPrefix]",
                                "hasBgpOverride": "[if(contains(parameters('routes')[copyIndex('routes')], 'hasBgpOverride'), parameters('routes')[copyIndex('routes')].hasBgpOverride, null())]",
                                "nextHopIpAddress": "[if(contains(parameters('routes')[copyIndex('routes')], 'nextHopIpAddress'), parameters('routes')[copyIndex('routes')].nextHopIpAddress, null())]",
                                "nextHopType": "[parameters('routes')[copyIndex('routes')].nextHopType]"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "microsoft.insights/actionGroups",
                      "apiVersion": "2019-06-01",
                      "name": "[variables('actiongroupname')]",
                      "location": "Global",
                      "properties": {
                        "groupShortName": "[variables('actiongroupnameshort')]",
                        "enabled": true,
                        "emailReceivers": [
                          {
                            "emailAddress": "[parameters('emailReceivers')[0]]",
                            "name": "Owner",
                            "useCommonAlertSchema": "true"
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2021-04-01",
                      "name": "[variables('storageAccountName')]",
                      "location": "[parameters('location')]",
                      "kind": "StorageV2",
                      "sku": {
                        "name": "Standard_LRS"
                      },
                      "tags": "[parameters('restags')]"
                    }
                  ]
                }
              }
            },
            // 3 Create a budget onto the subscription 
            // The contact email will be alerted
            // setup diagnostic setting to the central log analytics workspace
            // scope: subscription
            // dependend on: 2
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[concat(parameters('deploymentnameprefix'),'-','configure-spoke')]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "location": "[deployment().location]",
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentnameprefix'),'-','create-Resources'))]"
              ],
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "Inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "budget": {
                    "value": "[parameters('budget')]"
                  },
                  "ContactEmail": {
                    "value": "[parameters('ContactEmail')]"
                  },
                   "principalid": {
                    "value": "[parameters('principalid')]"
                  },
                   "restags": {
                    "value": "[parameters('restags')]"
                  },
                  "projectprefix": {
                    "value": "[parameters('projectprefix')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "budget": {
                      "type": "int"
                    },
                    "ContactEmail": {
                      "type": "array"
                    },
                    "startDateUtcNow2": {
                      "type": "string",
                      "defaultValue": "[utcNow('u')]"
                    },
                    "settingName": {
                      "type": "string",
                      "defaultValue": "default"
                    },
                    "workspaceId": {
                      "type": "string",
                      "defaultValue": "/subscriptions/0548f072-39c5-4986-864d-14d0395af3b7/resourceGroups/CentralMonitoring/providers/Microsoft.OperationalInsights/workspaces/CentralLogging"
                    },
                    "principalid": {
                      "type": "string"
                    },
                    "roleassigmentguid": {
                      "type": "string",
                      "defaultValue": "a7192e09-0605-4055-a2e7-7cd786075c8f"
                    },
                     "restags": {
                      "type": "object"
                    },
                    "projectprefix": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "nowplus1month": "[dateTimeAdd(parameters('startDateUtcNow2'), 'P1M')]",
                    "startDate": "[concat(substring(variables('nowplus1month'), 0, 7), '-01')]",
                    "actiongroupname": "[concat('actiongroup-',parameters('projectprefix'))]",
                    "advisorname": "[concat('advisor-',parameters('projectprefix'))]"
                  },
                  "outputs": {
                    "startDate": {
                      "type": "string",
                      "value": "[variables('startDate')]"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Consumption/budgets",
                      "apiVersion": "2021-10-01",
                      "name": "StandardBudget",
                      "properties": {
                        "timePeriod": {
                          "startDate": "[variables('startDate')]"
                        },
                        "timeGrain": "Monthly",
                        "amount": "[parameters('budget')]",
                        "category": "Cost",
                        "notifications": {
                          "NotificationForExceededBudget1": {
                            "enabled": true,
                            "operator": "GreaterThan",
                            "threshold": "75",
                            "contactEmails": "[parameters('ContactEmail')]"
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "apiVersion": "2021-05-01-preview",
                      "name": "[parameters('settingName')]",
                      "properties": {
                        "workspaceId": "[parameters('workspaceId')]",
                        //"storageAccountId":"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                        "logs": [
                          {
                            "category": "Administrative",
                            "enabled": true
                          },
                          {
                            "category": "Security",
                            "enabled": true
                          },
                          {
                            "category": "ServiceHealth",
                            "enabled": true
                          },
                          {
                            "category": "Alert",
                            "enabled": true
                          },
                          {
                            "category": "Recommendation",
                            "enabled": true
                          },
                          {
                            "category": "Policy",
                            "enabled": true
                          },
                          {
                            "category": "Autoscale",
                            "enabled": true
                          },
                          {
                            "category": "ResourceHealth",
                            "enabled": true
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[parameters('roleassigmentguid')]",
                      "properties": {
                        "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                        "principalId": "[parameters('principalid')]"
                      }
                    },
                    {
                      "type": "Microsoft.Resources/tags",
                      "apiVersion": "2020-06-01",
                      "name": "default",
                      "properties": {
                        "tags": "[parameters('restags')]"
                      }
                    },
                    {
                      "type": "Microsoft.Advisor/configurations",
                      "apiVersion": "2022-10-01",
                      "name": "default",
                      "properties": {
                        "digests": [
                          {
                            "actionGroupResourceId": "[resourceId('microsoft.insights/actionGroups',variables('actiongroupname'))]",
                            "categories": [ "Cost", "HighAvailability", "OperationalExcellence", "Performance", "Security" ],
                            "frequency": "30",
                            "language": "en",
                            "name": "[variables('advisorname')]",
                            "state": "Active"
                          }
                        ],
                        "duration": "7",
                        "exclude": "false",
                        "lowCpuThreshold": "5"
                      }
                    }
                  ]
                }
              }
            },
            // 4 Peer the VNET to the central Hub VNET 
            // Peer the private resolver to the spoke VNET
            // scope: Hub subscription
            // dependend on: 2
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[concat(parameters('deploymentnameprefix'),'-','configure-hub')]",
              "subscriptionId": "[parameters('hubsubscriptionid')]",
              "resourceGroup": "[parameters('hubresourcegroupname')]",
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentnameprefix'),'-','create-Resources'))]"
              ],
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "projectprefix": {
                    "value": "[parameters('projectprefix')]"
                  },
                  "hubvnet": {
                    "value": "[parameters('hubvnet')]"
                  },
                  "spokesubscriptionid": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "spokeresourcegroupname": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "projectprefix": {
                      "type": "string"
                    },
                    "hubvnet": {
                      "type": "string"
                    },
                    "spokesubscriptionid": {
                      "type": "string"
                    },
                    "spokeresourcegroupname": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    },
                    "forwardingRulesetName": {
                      "type": "string",
                      "defaultValue": "to-onprem"
                    }
                  },
                  "variables": {
                    "vnetname": "[concat(parameters('vnetName'),'-',parameters('projectprefix'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                      "apiVersion": "2020-05-01",
                      "name": "[format('{0}/{1}', parameters('hubvnet'), format('{0}-{1}', parameters('hubvnet'), variables('vnetname')))]",
                      "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": false,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false,
                        "remoteVirtualNetwork": {
                          "id": "[concat('/subscriptions/',parameters('spokesubscriptionid'),'/resourceGroups/',parameters('spokeresourcegroupname'),'/providers/Microsoft.Network/virtualNetworks/', parameters('vnetname'))]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Network/dnsForwardingRulesets/virtualNetworkLinks",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('forwardingRulesetName'), variables('vnetname'))]",
                      "properties": {
                        "metadata": {},
                        "virtualNetwork": {
                          "id": "[concat('/subscriptions/',parameters('spokesubscriptionid'),'/resourceGroups/',parameters('spokeresourcegroupname'),'/providers/Microsoft.Network/virtualNetworks/', parameters('vnetname'))]"
                        }
                      }
                    }
                  ]
                }
              }
            },
            // 5 Lock the resource group
            // scope: Resource group
            // dependend on 4
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[concat(parameters('deploymentnameprefix'),'-','create-lock')]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourcegroupname')]",
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentnameprefix'),'-','configure-spoke'))]"
              ],
              "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                  },
                  "variables":{
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/locks",
                      "apiVersion": "2016-09-01",
                      "name": "rgLock",
                      "properties": {
                        "level": "ReadOnly",
                        "notes": "Please contact cloud plattform team"
                      }
                    }
                  ],
                  "outputs": {}
                }
              }
            }
          ],
          "outputs": {
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', concat(parameters('deploymentnameprefix'),'-','create-sub'))]"
      ]
    }
  ],
  "outputs": {
    "subscriptionId": {
      "type": "string",
      "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', concat(parameters('deploymentnameprefix'),'-','create-sub'))).outputs.subscriptionId.value]"
    }
  }
}